{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json-schema.sodaru.com/serverless-template/openapi-extended.json",
  "description": "Validation schema for OpenAPI Specification 3.0.X. \n Extended with AWS API Gateway extensions.\n Open Api Schema Downloaded from https://github.com/OAI/OpenAPI-Specification/blob/main/schemas/v3.0/schema.json. \n AWS API Gateway Extensions https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html",
  "type": "object",
  "required": ["openapi", "info", "paths"],
  "properties": {
    "openapi": {
      "type": "string",
      "pattern": "^3\\.0\\.\\d(-.+)?$"
    },
    "info": {
      "$ref": "#/definitions/Info"
    },
    "externalDocs": {
      "$ref": "#/definitions/ExternalDocumentation"
    },
    "servers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Server"
      }
    },
    "security": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SecurityRequirement"
      }
    },
    "tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "uniqueItems": true
    },
    "paths": {
      "$ref": "#/definitions/Paths"
    },
    "components": {
      "$ref": "#/definitions/Components"
    },
    "x-amazon-apigateway-api-key-source": {
      "description": "Specify the source to receive an API key to throttle API methods that require a key",
      "enum": ["HEADER", "AUTHORIZER"]
    },
    "x-amazon-apigateway-binary-media-types": {
      "type": "array",
      "items": { "type": "string", "pattern": "^[a-z0-9]+\\/[a-z0-9]+$" },
      "minItems": 1
    },
    "x-amazon-apigateway-documentation": {
      "type": "object",
      "additionalProperties": false,
      "required": ["version", "documentationParts"],
      "properties": {
        "version": { "type": "string" },
        "documentationParts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentationPart"
          },
          "minItems": 1
        }
      }
    },
    "x-amazon-apigateway-gateway-responses": {
      "$ref": "#/definitions/XAmazonApigatewayGatewayResponses"
    },
    "x-amazon-apigateway-minimum-compression-size": {
      "type": "integer",
      "minimum": 0,
      "maximum": 10485760
    },
    "x-amazon-apigateway-policy": {
      "$ref": "./policy.json"
    },
    "x-amazon-apigateway-request-validator": {
      "$ref": "#/definitions/XAmazonApigatewayRequestValidator"
    },
    "x-amazon-apigateway-request-validators": {
      "$ref": "#/definitions/XAmazonApigatewayRequestValidators"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Reference": {
      "type": "object",
      "required": ["$ref"],
      "patternProperties": {
        "^\\$ref$": {
          "type": "string",
          "format": "uri-reference"
        }
      }
    },
    "Info": {
      "type": "object",
      "required": ["title", "version"],
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "termsOfService": {
          "type": "string",
          "format": "uri-reference"
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "license": {
          "$ref": "#/definitions/License"
        },
        "version": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri-reference"
        },
        "email": {
          "type": "string",
          "format": "email"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "License": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri-reference"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Server": {
      "type": "object",
      "required": ["url"],
      "properties": {
        "url": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ServerVariable"
          }
        },
        "x-amazon-apigateway-endpoint-configuration": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "disableExecuteApiEndpoint": {
              "type": "boolean"
            },
            "vpcEndpointIds": {
              "type": "array",
              "items": { "$ref": "./expression.json#/definitions/stringLike" }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "ServerVariable": {
      "type": "object",
      "required": ["default"],
      "properties": {
        "enum": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Components": {
      "type": "object",
      "properties": {
        "schemas": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Schema"
                },
                {
                  "$ref": "#/definitions/Reference"
                }
              ]
            }
          }
        },
        "responses": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Response"
                }
              ]
            }
          }
        },
        "parameters": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Parameter"
                }
              ]
            }
          }
        },
        "examples": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Example"
                }
              ]
            }
          }
        },
        "requestBodies": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/RequestBody"
                }
              ]
            }
          }
        },
        "headers": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Header"
                }
              ]
            }
          }
        },
        "securitySchemes": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/SecurityScheme"
                }
              ]
            }
          }
        },
        "links": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Link"
                }
              ]
            }
          }
        },
        "callbacks": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Callback"
                }
              ]
            }
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Schema": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "multipleOf": {
          "type": "number",
          "exclusiveMinimum": 0
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMaximum": {
          "type": "boolean",
          "default": false
        },
        "minimum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "type": "boolean",
          "default": false
        },
        "maxLength": {
          "type": "integer",
          "minimum": 0
        },
        "minLength": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "maxItems": {
          "type": "integer",
          "minimum": 0
        },
        "minItems": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "uniqueItems": {
          "type": "boolean",
          "default": false
        },
        "maxProperties": {
          "type": "integer",
          "minimum": 0
        },
        "minProperties": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "enum": {
          "type": "array",
          "items": {},
          "minItems": 1,
          "uniqueItems": false
        },
        "type": {
          "type": "string",
          "enum": ["array", "boolean", "integer", "number", "object", "string"]
        },
        "not": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "allOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "oneOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "anyOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "items": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "type": "boolean"
            }
          ],
          "default": true
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "default": {},
        "nullable": {
          "type": "boolean",
          "default": false
        },
        "discriminator": {
          "$ref": "#/definitions/Discriminator"
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "writeOnly": {
          "type": "boolean",
          "default": false
        },
        "example": {},
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "xml": {
          "$ref": "#/definitions/XML"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Discriminator": {
      "type": "object",
      "required": ["propertyName"],
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "mapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "XML": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "format": "uri"
        },
        "prefix": {
          "type": "string"
        },
        "attribute": {
          "type": "boolean",
          "default": false
        },
        "wrapped": {
          "type": "boolean",
          "default": false
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Response": {
      "type": "object",
      "required": ["description"],
      "properties": {
        "description": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Header"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          }
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Link"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "MediaType": {
      "type": "object",
      "properties": {
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "example": {},
        "examples": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "encoding": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Encoding"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ExampleXORExamples"
        }
      ]
    },
    "Example": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {},
        "externalValue": {
          "type": "string",
          "format": "uri-reference"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Header": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "allowEmptyValue": {
          "type": "boolean",
          "default": false
        },
        "style": {
          "type": "string",
          "enum": ["simple"],
          "default": "simple"
        },
        "explode": {
          "type": "boolean"
        },
        "allowReserved": {
          "type": "boolean",
          "default": false
        },
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          },
          "minProperties": 1,
          "maxProperties": 1
        },
        "example": {},
        "examples": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ExampleXORExamples"
        },
        {
          "$ref": "#/definitions/SchemaXORContent"
        }
      ]
    },
    "Paths": {
      "type": "object",
      "patternProperties": {
        "^\\/": {
          "$ref": "#/definitions/PathItem"
        },
        "^x-": {}
      },
      "additionalProperties": false
    },
    "PathItem": {
      "type": "object",
      "properties": {
        "$ref": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Parameter"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "uniqueItems": true
        }
      },
      "patternProperties": {
        "^(get|put|post|delete|options|head|patch|trace)$": {
          "$ref": "#/definitions/Operation"
        },
        "^x-amazon-apigateway-any-method$": {
          "$ref": "#/definitions/XAmazonApiGatewayAnyMethodOperation"
        }
      },
      "additionalProperties": false
    },
    "Operation": {
      "type": "object",
      "required": ["responses"],
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation"
        },
        "operationId": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Parameter"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "uniqueItems": true
        },
        "requestBody": {
          "oneOf": [
            {
              "$ref": "#/definitions/RequestBody"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        },
        "callbacks": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Callback"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "security": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRequirement"
          }
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          }
        },
        "x-amazon-apigateway-request-validator": {
          "$ref": "#/definitions/XAmazonApigatewayRequestValidator"
        }
      },
      "additionalProperties": false
    },
    "Responses": {
      "type": "object",
      "properties": {
        "default": {
          "oneOf": [
            {
              "$ref": "#/definitions/Response"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        }
      },
      "patternProperties": {
        "^[1-5](?:\\d{2}|XX)$": {
          "oneOf": [
            {
              "$ref": "#/definitions/Response"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "^x-": {}
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "SecurityRequirement": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ExternalDocumentation": {
      "type": "object",
      "required": ["url"],
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri-reference"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ExampleXORExamples": {
      "description": "Example and examples are mutually exclusive",
      "type": "object",
      "not": {
        "required": ["example", "examples"]
      }
    },
    "SchemaXORContent": {
      "description": "Schema and content are mutually exclusive, at least one is required",
      "type": "object",
      "not": {
        "required": ["schema", "content"]
      },
      "oneOf": [
        {
          "required": ["schema"]
        },
        {
          "required": ["content"],
          "description": "Some properties are not allowed if content is present",
          "allOf": [
            {
              "not": {
                "required": ["style"]
              }
            },
            {
              "not": {
                "required": ["explode"]
              }
            },
            {
              "not": {
                "required": ["allowReserved"]
              }
            },
            {
              "not": {
                "required": ["example"]
              }
            },
            {
              "not": {
                "required": ["examples"]
              }
            }
          ]
        }
      ]
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "in": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "allowEmptyValue": {
          "type": "boolean",
          "default": false
        },
        "style": {
          "type": "string"
        },
        "explode": {
          "type": "boolean"
        },
        "allowReserved": {
          "type": "boolean",
          "default": false
        },
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          },
          "minProperties": 1,
          "maxProperties": 1
        },
        "example": {},
        "examples": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "required": ["name", "in"],
      "allOf": [
        {
          "$ref": "#/definitions/ExampleXORExamples"
        },
        {
          "$ref": "#/definitions/SchemaXORContent"
        },
        {
          "$ref": "#/definitions/ParameterLocation"
        }
      ]
    },
    "ParameterLocation": {
      "description": "Parameter location",
      "type": "object",
      "oneOf": [
        {
          "description": "Parameter in path",
          "required": ["required"],
          "properties": {
            "in": {
              "enum": ["path"]
            },
            "style": {
              "enum": ["matrix", "label", "simple"],
              "default": "simple"
            },
            "required": {
              "enum": [true]
            }
          }
        },
        {
          "description": "Parameter in query",
          "properties": {
            "in": {
              "enum": ["query"]
            },
            "style": {
              "enum": ["form", "spaceDelimited", "pipeDelimited", "deepObject"],
              "default": "form"
            }
          }
        },
        {
          "description": "Parameter in header",
          "properties": {
            "in": {
              "enum": ["header"]
            },
            "style": {
              "enum": ["simple"],
              "default": "simple"
            }
          }
        },
        {
          "description": "Parameter in cookie",
          "properties": {
            "in": {
              "enum": ["cookie"]
            },
            "style": {
              "enum": ["form"],
              "default": "form"
            }
          }
        }
      ]
    },
    "RequestBody": {
      "type": "object",
      "required": ["content"],
      "properties": {
        "description": {
          "type": "string"
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          }
        },
        "required": {
          "type": "boolean",
          "default": false
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "SecurityScheme": {
      "oneOf": [
        {
          "$ref": "#/definitions/APIKeySecurityScheme"
        },
        {
          "$ref": "#/definitions/HTTPSecurityScheme"
        },
        {
          "$ref": "#/definitions/OAuth2SecurityScheme"
        },
        {
          "$ref": "#/definitions/OpenIdConnectSecurityScheme"
        }
      ]
    },
    "APIKeySecurityScheme": {
      "type": "object",
      "required": ["type", "name", "in"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["apiKey"]
        },
        "name": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": ["header", "query", "cookie"]
        },
        "description": {
          "type": "string"
        },
        "x-amazon-apigateway-authorizer": {
          "$ref": "#/definitions/XAamazonApigatewayAuthorizer"
        },
        "x-amazon-apigateway-authtype": {
          "type": "string",
          "maxLength": 256
        }
      },
      "additionalProperties": false
    },
    "HTTPSecurityScheme": {
      "type": "object",
      "required": ["scheme", "type"],
      "properties": {
        "scheme": {
          "type": "string"
        },
        "bearerFormat": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["http"]
        },
        "x-amazon-apigateway-authorizer": {
          "$ref": "#/definitions/XAamazonApigatewayAuthorizer"
        }
      },
      "additionalProperties": false,
      "oneOf": [
        {
          "description": "Bearer",
          "properties": {
            "scheme": {
              "enum": ["bearer"]
            }
          }
        },
        {
          "description": "Non Bearer",
          "not": {
            "required": ["bearerFormat"]
          },
          "properties": {
            "scheme": {
              "not": {
                "enum": ["bearer"]
              }
            }
          }
        }
      ]
    },
    "OAuth2SecurityScheme": {
      "type": "object",
      "required": ["type", "flows"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["oauth2"]
        },
        "flows": {
          "$ref": "#/definitions/OAuthFlows"
        },
        "description": {
          "type": "string"
        },
        "x-amazon-apigateway-authorizer": {
          "$ref": "#/definitions/XAamazonApigatewayAuthorizer"
        }
      },
      "additionalProperties": false
    },
    "OpenIdConnectSecurityScheme": {
      "type": "object",
      "required": ["type", "openIdConnectUrl"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["openIdConnect"]
        },
        "openIdConnectUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "description": {
          "type": "string"
        },
        "x-amazon-apigateway-authorizer": {
          "$ref": "#/definitions/XAamazonApigatewayAuthorizer"
        }
      },
      "additionalProperties": false
    },
    "OAuthFlows": {
      "type": "object",
      "properties": {
        "implicit": {
          "$ref": "#/definitions/ImplicitOAuthFlow"
        },
        "password": {
          "$ref": "#/definitions/PasswordOAuthFlow"
        },
        "clientCredentials": {
          "$ref": "#/definitions/ClientCredentialsFlow"
        },
        "authorizationCode": {
          "$ref": "#/definitions/AuthorizationCodeOAuthFlow"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ImplicitOAuthFlow": {
      "type": "object",
      "required": ["authorizationUrl", "scopes"],
      "properties": {
        "authorizationUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "refreshUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "PasswordOAuthFlow": {
      "type": "object",
      "required": ["tokenUrl"],
      "properties": {
        "tokenUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "refreshUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ClientCredentialsFlow": {
      "type": "object",
      "required": ["tokenUrl"],
      "properties": {
        "tokenUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "refreshUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "AuthorizationCodeOAuthFlow": {
      "type": "object",
      "required": ["authorizationUrl", "tokenUrl"],
      "properties": {
        "authorizationUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "refreshUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Link": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string"
        },
        "operationRef": {
          "type": "string",
          "format": "uri-reference"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {}
        },
        "requestBody": {},
        "description": {
          "type": "string"
        },
        "server": {
          "$ref": "#/definitions/Server"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "not": {
        "description": "Operation Id and Operation Ref are mutually exclusive",
        "required": ["operationId", "operationRef"]
      }
    },
    "Callback": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/PathItem"
      },
      "patternProperties": {
        "^x-": {}
      }
    },
    "Encoding": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Header"
          }
        },
        "style": {
          "type": "string",
          "enum": ["form", "spaceDelimited", "pipeDelimited", "deepObject"]
        },
        "explode": {
          "type": "boolean"
        },
        "allowReserved": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "XAmazonApiGatewayAnyMethodOperation": {
      "type": "object",
      "required": ["responses", "x-amazon-apigateway-integration"],
      "properties": {
        "tags": {
          "$ref": "#/definitions/Operation/properties/tags"
        },
        "summary": {
          "$ref": "#/definitions/Operation/properties/summary"
        },
        "description": {
          "$ref": "#/definitions/Operation/properties/description"
        },
        "externalDocs": {
          "$ref": "#/definitions/Operation/properties/externalDocs"
        },
        "operationId": {
          "$ref": "#/definitions/Operation/properties/operationId"
        },
        "parameters": {
          "$ref": "#/definitions/Operation/properties/parameters"
        },
        "requestBody": {
          "$ref": "#/definitions/Operation/properties/requestBody"
        },
        "responses": {
          "type": "object"
        },
        "callbacks": {
          "$ref": "#/definitions/Operation/properties/callbacks"
        },
        "deprecated": {
          "$ref": "#/definitions/Operation/properties/deprecated"
        },
        "security": {
          "$ref": "#/definitions/Operation/properties/security"
        },
        "servers": {
          "$ref": "#/definitions/Operation/properties/servers"
        },
        "x-amazon-apigateway-integration": {
          "$ref": "#/definitions/XAmazonApigatewayIntegration"
        },
        "x-amazon-apigateway-request-validator": {
          "$ref": "#/definitions/XAmazonApigatewayRequestValidator"
        }
      },
      "additionalProperties": false
    },
    "XAamazonApigatewayAuthorizer": {
      "type": "object",
      "description": "Defines a Lambda authorizer or JWT authorizer to be applied for authorization of method invocations in API Gateway.",
      "additionalProperties": false,
      "required": ["type"],
      "properties": {
        "type": { "enum": ["token", "request"] },
        "authorizerUri": {
          "description": "ARN of the lambda for authorizer",
          "$ref": "./expression.json#/definitions/stringLike"
        },
        "authorizerCredentials": {
          "description": "The credentials required for invoking the authorizer, if any, in the form of an ARN of an IAM execution role. For example, \"arn:aws:iam::account-id:IAM_role\".",
          "$ref": "./expression.json#/definitions/stringLike"
        },
        "identitySource": {
          "type": "string",
          "maxLength": 512,
          "pattern": "^[a-zA-Z0-9\\.\\s,]+$"
        },
        "identityValidationExpression": {
          "type": "string",
          "format": "regex"
        },
        "authorizerResultTtlInSeconds": {
          "type": "integer",
          "description": "The number of seconds during which authorizer result is cached."
        }
      }
    },
    "DocumentationPart": {
      "type": "object",
      "additionalProperties": false,
      "description": "TODO: can be still improved Refer https://docs.aws.amazon.com/apigateway/api-reference/resource/documentation-part",
      "properties": {
        "location": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "enum": [
                "API",
                "AUTHORIZER",
                "MODEL",
                "RESOURCE",
                "METHOD",
                "PATH_PARAMETER",
                "QUERY_PARAMETER",
                "REQUEST_HEADER",
                "REQUEST_BODY",
                "RESPONSE, RESPONSE_HEADER",
                "RESPONSE_BODY"
              ]
            },
            "path": {
              "type": "string",
              "format": "uri"
            },
            "method": {
              "type": "string",
              "pattern": "^(get|put|post|delete|options|head|patch|trace|\\*)$"
            },
            "statusCode": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "properties": {
          "type": "object"
        }
      }
    },
    "XAmazonApigatewayGatewayResponses": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ACCESS_DENIED": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "API_CONFIGURATION_ERROR": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "AUTHORIZER_FAILURE": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "AUTHORIZER_CONFIGURATION_ERROR": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "BAD_REQUEST_PARAMETERS": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "BAD_REQUEST_BODY": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "DEFAULT_4XX": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "DEFAULT_5XX": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "EXPIRED_TOKEN": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "INVALID_SIGNATURE": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "INTEGRATION_FAILURE": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "INTEGRATION_TIMEOUT": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "INVALID_API_KEY": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "MISSING_AUTHENTICATION_TOKEN": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "QUOTA_EXCEEDED": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "REQUEST_TOO_LARGE": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "RESOURCE_NOT_FOUND": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "THROTTLED": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "UNAUTHORIZED": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        },
        "UNSUPPORTED_MEDIA_TYPE": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse"
        }
      }
    },
    "IntegrationParameter": {
      "type": "string",
      "oneOf": [
        {
          "pattern": "^method.request.path.[a-zA-Z0-9._-]+$"
        },
        {
          "pattern": "^method.request.querystring.[a-zA-Z0-9._-]+$"
        },
        {
          "pattern": "^method.request.multivaluequerystring.[a-zA-Z0-9._-]+$"
        },
        {
          "pattern": "^method.request.header.[a-zA-Z0-9._-]+$"
        },
        {
          "pattern": "^method.request.multivalueheader.[a-zA-Z0-9._-]+$"
        },
        {
          "pattern": "^method.request.body$"
        },
        {
          "pattern": "^method.request.body..+$"
        },
        {
          "pattern": "^stageVariables.[a-zA-Z0-9_-]+$"
        },
        {
          "pattern": "^context.[a-zA-Z0-9._-]+$"
        },
        {
          "pattern": "^'[a-zA-Z0-9._-]+'$"
        }
      ]
    },
    "XAmazonApigatewayGatewayResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "statusCode": {
          "type": "integer",
          "minimum": 100,
          "exclusiveMaximum": 600
        },
        "responseParameters": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^gatewayresponse.(header|path|querystring).[a-zA-Z0-9._-]+$": {
              "$ref": "#/definitions/IntegrationParameter"
            }
          }
        },
        "responseTemplates": {
          "type": "object",
          "additionalProperties": false,
          "description": "Defines GatewayResponse mapping templates, https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-gateway-responses.responseTemplates.html",
          "patternProperties": {
            "^[a-z0-9-]+\\^[a-z0-9-]+/$": {
              "type": "string",
              "maxLength": 1024
            }
          }
        }
      }
    },
    "XAmazonApigatewayIntegration": {
      "type": "object",
      "additionalProperties": false,
      "description": "Specifies details of the backend integration used for this method. https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-integration.html",
      "properties": {
        "cacheKeyParameters": {
          "type": "array",
          "items": { "type": "string" },
          "description": "A list of request parameters whose values are to be cached."
        },
        "cacheNamespace": {
          "type": "string",
          "description": "An API-specific tag group of related cached parameters."
        },
        "connectionId": {
          "$ref": "./expression.json#/definitions/stringLike"
        },
        "connectionType": {
          "enum": ["VPC_LINK", "INTERNET"]
        },
        "credentials": {
          "$ref": "./expression.json#/definitions/stringLike"
        },
        "contentHandling": {
          "enum": ["CONVERT_TO_TEXT", "CONVERT_TO_BINARY"]
        },
        "httpMethod": {
          "enum": [
            "ANY",
            "GET",
            "PUT",
            "POST",
            "DELETE",
            "OPTIONS",
            "HEAD",
            "PATCH",
            "TRACE"
          ]
        },
        "passthroughBehavior": {
          "enum": ["when_no_templates", "when_no_match", "never"]
        },
        "requestParameters": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^integration.request.(header|path|querystring|body).[a-zA-Z0-9._-]+$": {
              "$ref": "#/definitions/IntegrationParameter"
            }
          }
        },
        "requestTemplates": {
          "$ref": "#/definitions/XAmazonApigatewayGatewayResponse/properties/responseTemplates"
        },
        "responses": {
          "type": "object",
          "description": "Defines the method's responses and specifies parameter mappings or payload mappings from integration responses to method responses.",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "statusCode": {
                "$ref": "#/definitions/XAmazonApigatewayGatewayResponse/properties/statusCode"
              },
              "responseParameters": {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^method.response.header.[a-zA-Z0-9._-]+$": {
                    "type": "string",
                    "oneOf": [
                      {
                        "pattern": "^method.request.header.[a-zA-Z0-9._-]+$"
                      },
                      {
                        "pattern": "^method.request.body..+$"
                      }
                    ]
                  }
                }
              },
              "responseTemplates": {
                "$ref": "#/definitions/XAmazonApigatewayGatewayResponse/properties/responseTemplates"
              },
              "contentHandling": {
                "$ref": "#/definitions/XAmazonApigatewayIntegration/properties/contentHandling"
              }
            }
          }
        },
        "timeoutInMillis": {
          "type": "integer",
          "minimum": 59,
          "maximum": 29000
        },
        "type": {
          "enum": ["http", "http_proxy", "aws_proxy", "aws", "mock"]
        },
        "tlsConfig": {
          "type": "object",
          "additionalProperties": false,
          "properties": { "insecureSkipVerification": { "type": "boolean" } }
        },
        "uri": {
          "$ref": "./expression.json#/definitions/stringLike"
        }
      }
    },
    "XAmazonApigatewayRequestValidator": {
      "type": "string",
      "description": "Specifies a request validator, by referencing a request_validator_name of the x-amazon-apigateway-request-validators object"
    },
    "XAmazonApigatewayRequestValidators": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z0-9]+$": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "validateRequestBody": { "type": "boolean" },
            "validateRequestParameters": { "type": "boolean" }
          }
        }
      }
    }
  }
}
