{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://json-schema.sodaru.com/serverless-template/resources/function.json",
  "title": "JSON Schema for Function Resource in Serverless Template by Sodaru Technologies",
  "type": "object",
  "required": ["Type", "Properties"],
  "definitions": {
    "Environment": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Variables": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9_]+$": {
              "$ref": "../expression.json#/definitions/stringLike"
            }
          }
        }
      }
    },
    "MemorySize": {
      "type": "integer",
      "description": "The amount of memory available to the function at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.",
      "minimum": 128,
      "maximum": 10240
    },
    "Timeout": {
      "type": "integer",
      "description": "The maximum time in seconds that the function can run before it is stopped",
      "minimum": 1,
      "maximum": 900
    },
    "EventInvokeDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Type": { "enum": ["SQS", "SNS", "Lambda", "EventBridge"] },
        "Destination": {
          "$ref": "../expression.json#/definitions/stringLike"
        }
      },
      "if": {
        "properties": {
          "Type": { "enum": ["Lambda", "EventBridge"] }
        }
      },
      "then": {
        "required": ["Destination"]
      }
    },
    "EventInvokeConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DestinationConfig": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "OnFailure": {
              "$ref": "#/definitions/EventInvokeDestinationConfiguration"
            },
            "OnSuccess": {
              "$ref": "#/definitions/EventInvokeDestinationConfiguration"
            }
          }
        },
        "MaximumEventAgeInSeconds": {
          "$ref": "../expression.json#/definitions/numberLike"
        },
        "MaximumRetryAttempts": {
          "$ref": "../expression.json#/definitions/numberLike"
        }
      }
    },
    "EventSourceApi": {
      "type": "object",
      "additionalProperties": false,
      "required": ["Type", "Properties"],
      "properties": {
        "Type": { "const": "Api" },
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "required": ["RestApiId", "Method", "Path"],
          "properties": {
            "Auth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ApiKeyRequired": {
                  "$ref": "./api.json#/definitions/ApiAuth/properties/ApiKeyRequired"
                },
                "AuthorizationScopes": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "Authorizer": {
                  "$ref": "./api.json#/definitions/Authorizer"
                },
                "InvokeRole": {
                  "$ref": "./api.json#/definitions/ApiAuth/properties/InvokeRole"
                },
                "ResourcePolicy": {
                  "$ref": "./api.json#/definitions/ApiAuth/properties/ResourcePolicy"
                }
              }
            },
            "Method": { "$ref": "../expression.json#/definitions/stringLike" },
            "Path": { "$ref": "../expression.json#/definitions/stringLike" },
            "RestApiId": {
              "$ref": "../expression.json#/definitions/stringLike"
            }
          }
        }
      }
    },
    "EventSourceCognito": {
      "type": "object",
      "additionalProperties": false,
      "required": ["Type", "Properties"],
      "properties": {
        "Type": { "const": "Cognito" },
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "required": ["UserPool", "Trigger"],
          "properties": {
            "UserPool": {
              "$ref": "../expression.json#/definitions/stringLike"
            },
            "Trigger": {
              "type": "array",
              "items": {
                "oneOf": [
                  { "const": "CreateAuthChallenge" },
                  { "const": "DefineAuthChallenge" },
                  { "const": "VerifyAuthChallengeResponse" },
                  { "const": "CustomMessage" },
                  { "const": "PostAuthentication" },
                  { "const": "PostConfirmation" },
                  { "const": "PreAuthentication" },
                  { "const": "PreSignUp" },
                  { "const": "PreTokenGeneration" },
                  { "const": "UserMigration" }
                ]
              },
              "minItems": 1,
              "uniqueItems": true
            }
          }
        }
      }
    },
    "EventSourceDynamoDB": {
      "type": "object",
      "additionalProperties": false,
      "required": ["Type", "Properties"],
      "properties": {
        "Type": { "const": "DynamoDB" },
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "required": ["Stream", "StartingPosition"],
          "properties": {
            "Stream": { "$ref": "../expression.json#/definitions/stringLike" },
            "StartingPosition": {
              "oneOf": [{ "const": "TRIM_HORIZON" }, { "const": "LATEST" }]
            },
            "BatchSize": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "BisectBatchOnFunctionError": {
              "$ref": "../expression.json#/definitions/booleanLike"
            },
            "DestinationConfig": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "OnFailure": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Destination": {
                      "$ref": "../expression.json#/definitions/stringLike"
                    }
                  }
                }
              }
            },
            "FunctionResponseTypes": {
              "type": "array",
              "items": { "type": "string" }
            },
            "MaximumBatchingWindowInSeconds": {
              "type": "integer",
              "minimum": 0,
              "maximum": 300
            },
            "MaximumRecordAgeInSeconds": {
              "type": "integer",
              "minimum": -1,
              "maximum": 604800
            },
            "MaximumRetryAttempts": {
              "type": "integer",
              "minimum": -1,
              "maximum": 604800
            },
            "ParallelizationFactor": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10
            },
            "TumblingWindowInSeconds": {
              "type": "integer",
              "minimum": 0,
              "maximum": 900
            }
          }
        }
      }
    },
    "EventSourceSchedule": {
      "type": "object",
      "additionalProperties": false,
      "required": ["Type", "Properties"],
      "properties": {
        "Type": { "const": "Schedule" },
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "required": ["Schedule"],
          "properties": {
            "Schedule": {
              "$ref": "../expression.json#/definitions/stringLike"
            },
            "DeadLetterConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Arn": {
                      "$ref": "../expression.json#/definitions/stringLike"
                    }
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "Type": { "const": "SQS" },
                    "QueueLogicalId": {
                      "$ref": "../expression.json#/definitions/stringLike"
                    }
                  }
                }
              ]
            },
            "Description": {
              "type": "string",
              "maxLength": 512
            },
            "Input": {
              "type": "string"
            },
            "Name": {
              "$ref": "../expression.json#/definitions/stringLike"
            },
            "RetryPolicy": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "MaximumEventAgeInSeconds": {
                  "type": "integer",
                  "minimum": 60,
                  "maximum": 86400
                },
                "MaximumRetryAttempts": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 185
                }
              }
            }
          }
        }
      }
    },
    "EventSourceSNS": {
      "type": "object",
      "additionalProperties": false,
      "required": ["Type", "Properties"],
      "properties": {
        "Type": { "const": "SNS" },
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "required": ["Topic"],
          "properties": {
            "Topic": {
              "$ref": "../expression.json#/definitions/stringLike"
            },
            "FilterPolicy": {
              "type": "object"
            },
            "SqsSubscription": {
              "oneOf": [
                { "const": true },
                {
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["QueueArn", "QueueUrl"],
                  "properties": {
                    "BatchSize": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 1000
                    },
                    "QueuePolicyLogicalId": {
                      "$ref": "../expression.json#/definitions/stringLike"
                    },
                    "QueueArn": {
                      "$ref": "../expression.json#/definitions/stringLike"
                    },
                    "QueueUrl": {
                      "$ref": "../expression.json#/definitions/stringLike"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "EventSourceSQS": {
      "type": "object",
      "additionalProperties": false,
      "required": ["Type", "Properties"],
      "properties": {
        "Type": { "const": "SQS" },
        "Properties": {
          "type": "object",
          "additionalProperties": false,
          "required": ["Queue"],
          "properties": {
            "Queue": {
              "$ref": "../expression.json#/definitions/stringLike"
            },
            "MaximumBatchingWindowInSeconds": {
              "type": "integer",
              "minimum": 0,
              "maximum": 300
            },
            "BatchSize": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        }
      }
    }
  },
  "properties": {
    "Type": {
      "const": "AWS::Serverless::Function"
    },
    "SLP::Extend": {
      "$ref": "./resource-properties.json#/definitions/SLP::Extend"
    },
    "SLP::DependsOn": {
      "$ref": "./resource-properties.json#/definitions/SLP::DependsOn"
    },
    "SLP::Output": {
      "$ref": "./resource-properties.json#/definitions/SLP::Output"
    },
    "Properties": {
      "type": "object",
      "additionalProperties": false,
      "oneOf": [{ "required": ["CodeUri"] }, { "required": ["InlineCode"] }],
      "properties": {
        "CodeUri": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "SLP::Function": {
              "type": "string",
              "description": "The name of the function, this is the file name of es module under 'serverless/functions' directory (without file extension)",
              "pattern": "^[a-zA-Z]+[a-zA-Z0-9]*$"
            }
          }
        },
        "InlineCode": {
          "type": "string"
        },
        "DeadLetterQueue": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Type": { "$ref": "../expression.json#/definitions/stringLike" },
            "TargetArn": {
              "$ref": "../expression.json#/definitions/stringLike"
            }
          }
        },
        "Description": { "type": "string", "maxLength": 256 },
        "Environment": {
          "$ref": "#/definitions/Environment"
        },
        "EventInvokeConfig": {
          "$ref": "#/definitions/EventInvokeConfig"
        },
        "Events": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-zA-Z0-9]+$": {
              "oneOf": [
                { "$ref": "#/definitions/EventSourceApi" },
                { "$ref": "#/definitions/EventSourceCognito" },
                { "$ref": "#/definitions/EventSourceDynamoDB" },
                { "$ref": "#/definitions/EventSourceSchedule" },
                { "$ref": "#/definitions/EventSourceSNS" },
                { "$ref": "#/definitions/EventSourceSQS" }
              ]
            }
          }
        },
        "Policies": {
          "oneOf": [
            { "$ref": "../expression.json#/definitions/stringLike" },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  { "$ref": "../expression.json#/definitions/stringLike" },
                  { "$ref": "../policy.json" }
                ]
              },
              "minItems": 1,
              "maxItems": 10
            }
          ]
        },
        "Tags": {
          "$ref": "../tags.json#/definitions/tagsMap"
        },
        "MemorySize": {
          "$ref": "#/definitions/MemorySize"
        },
        "Timeout": {
          "$ref": "#/definitions/Timeout"
        }
      }
    }
  },
  "additionalProperties": false
}
